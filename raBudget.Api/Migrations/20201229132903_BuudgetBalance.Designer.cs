// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using raBudget.Infrastructure.Database;

namespace raBudget.Api.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    [Migration("20201229132903_BuudgetBalance")]
    partial class BuudgetBalance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("raBudget.Domain.Entities.Budget", b =>
                {
                    b.Property<Guid>("BudgetId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CurrencyCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OwnerUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BudgetId");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetBalance", b =>
                {
                    b.Property<Guid>("BudgetId")
                        .HasColumnType("char(36)");

                    b.HasKey("BudgetId");

                    b.ToTable("BudgetBalances");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory", b =>
                {
                    b.Property<Guid>("BudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BudgetCategoryIconId")
                        .HasColumnType("char(36)");

                    b.Property<int>("BudgetCategoryType")
                        .HasColumnType("int");

                    b.Property<Guid?>("BudgetId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("BudgetCategoryId");

                    b.HasIndex("BudgetCategoryIconId");

                    b.HasIndex("BudgetId");

                    b.ToTable("BudgetCategories");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory+BudgetedAmount", b =>
                {
                    b.Property<Guid>("BudgetedAmountId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BudgetedAmountId");

                    b.HasIndex("BudgetCategoryId");

                    b.ToTable("BudgetedAmount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategoryIcon", b =>
                {
                    b.Property<Guid>("BudgetCategoryIconId")
                        .HasColumnType("char(36)");

                    b.Property<string>("IconKey")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BudgetCategoryIconId");

                    b.ToTable("BudgetCategoryIcons");

                    b.HasData(
                        new
                        {
                            BudgetCategoryIconId = new Guid("25277fbd-0df9-4270-8cfe-0d726a875285"),
                            IconKey = "mdi-car"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("21c5cc32-4e00-4cb0-9262-daff0c048131"),
                            IconKey = "mdi-cart"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("107c74fc-a6a4-405a-98ad-e18d32e98cf9"),
                            IconKey = "mdi-train-car"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("6eeddb9c-3824-4c64-9655-2b810e698fe4"),
                            IconKey = "mdi-wallet-travel"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("66bd1af1-fc63-4b24-8089-d5f14b2d5701"),
                            IconKey = "mdi-wrench"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("ab9160b2-c8a9-4e7a-bc4e-ea13109ee991"),
                            IconKey = "mdi-basket"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("c46d7085-9b2a-4e69-9ab8-830403e95803"),
                            IconKey = "mdi-gamepad"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("47ca4ec9-08bf-4270-b839-5770b2f0b09b"),
                            IconKey = "mdi-phone"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("f415705e-d951-4e65-b6fe-c274e5cdc222"),
                            IconKey = "mdi-airplane"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("c64fb617-7333-49ba-9eb6-19121f7eebb9"),
                            IconKey = "mdi-currency-usd-circle-outline"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("4d529f43-bb5d-4f38-90bf-6df39afbce0b"),
                            IconKey = "mdi-format-paint"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("3a56e12e-88a0-442b-909e-419bdacbf720"),
                            IconKey = "mdi-gamepad-square"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("02236f38-183d-43fc-93ff-66f2380ff6be"),
                            IconKey = "mdi-laptop"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("43319ec7-300d-4a75-a35f-929e46b10f90"),
                            IconKey = "mdi-camera"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("a03604b8-e9ee-40d5-aafb-c8495f81c888"),
                            IconKey = "mdi-city"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("d4c11c9b-6293-4312-9672-5600f545d07f"),
                            IconKey = "mdi-fire"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("8f0cd281-5388-4a92-a66f-10530aa0a2b2"),
                            IconKey = "mdi-dumbbell"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("48055bfa-e46e-46ff-acc0-67434f4d5aea"),
                            IconKey = "mdi-coffee"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("188de7c2-ca71-45ae-82bb-26e27490492c"),
                            IconKey = "mdi-dice-5"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("0cf4ffa0-2643-441b-98ac-2f0f0ff9f68a"),
                            IconKey = "mdi-beach"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("496df917-3698-4ecd-a39a-123dba6e3d29"),
                            IconKey = "mdi-bus-articulated-front"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("24ef9a86-7bcd-4b74-9d63-25c9a9a5c028"),
                            IconKey = "mdi-smoking"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("9d2dbb44-a54a-4697-b38a-de5bcdf71d4d"),
                            IconKey = "mdi-fridge"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("70efd24b-facf-4dff-9900-b62230b22729"),
                            IconKey = "mdi-baby-face"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("97f8395d-d468-4874-9f5b-b4a74b737726"),
                            IconKey = "mdi-paw"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("ae52a618-a4f6-40ed-b948-f6cde469a023"),
                            IconKey = "mdi-bandage"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("9cbe8f8b-4210-494e-b9ea-ffb2c053eb56"),
                            IconKey = "mdi-human"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("643e4a6f-600e-41fe-b65a-658ae181297e"),
                            IconKey = "mdi-sofa"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("f162ca17-b457-486d-b64c-a1945277efc6"),
                            IconKey = "mdi-memory"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("604c67e7-30be-43fa-8698-ad68c82f9c05"),
                            IconKey = "mdi-cellphone-android"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("1959dfe2-e57b-45f6-b846-0f3de86f7c93"),
                            IconKey = "mdi-speaker"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("eb83ecb2-62ce-4ffe-9002-933935409b1d"),
                            IconKey = "mdi-sim"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("3a795476-9de4-4df8-a1e7-b1d68b283d41"),
                            IconKey = "mdi-silverware-fork-knife"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("a3084dfb-82bf-490f-9908-d992cb9aa3f1"),
                            IconKey = "mdi-food"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("829ca796-4aff-41ea-aae5-7dfbb8835a6b"),
                            IconKey = "mdi-gas-station"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("76b1215f-c0ab-4bd7-901d-d188158a224d"),
                            IconKey = "mdi-hospital-building"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("f4dce2da-6f89-418c-9f95-4d99cc9c481b"),
                            IconKey = "mdi-shopping"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("fcc9ce3b-8e2f-4e69-a389-b19c5a462ede"),
                            IconKey = "mdi-glass-cocktail"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("a5aeb250-4a47-40de-88ec-699ce8e469da"),
                            IconKey = "mdi-filmstrip"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("afdb4441-7789-4985-ba42-7e19aa2174c8"),
                            IconKey = "mdi-bike"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("3751c312-65dc-4339-80e2-55d0f8c24a24"),
                            IconKey = "mdi-motorbike"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("1f6ffd84-833a-4b1b-937e-d9cc54a74a44"),
                            IconKey = "mdi-wallet-giftcard"
                        });
                });

            modelBuilder.Entity("raBudget.Domain.Entities.SubTransaction", b =>
                {
                    b.Property<Guid>("SubTransactionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("ParentTransactionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("char(36)");

                    b.HasKey("SubTransactionId");

                    b.HasIndex("TransactionId");

                    b.ToTable("SubTransaction");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("raBudget.Domain.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyCode")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EnglishName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NativeName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Symbol")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CurrencyCode");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            CurrencyCode = 8,
                            Code = "ALL",
                            EnglishName = "Albanian Lek",
                            NativeName = "Leku shqiptar",
                            Symbol = "Lekë"
                        },
                        new
                        {
                            CurrencyCode = 12,
                            Code = "DZD",
                            EnglishName = "Algerian Dinar",
                            NativeName = "دينار جزائري",
                            Symbol = "د.ج.‏"
                        },
                        new
                        {
                            CurrencyCode = 32,
                            Code = "ARS",
                            EnglishName = "Argentine Peso",
                            NativeName = "peso argentino",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 36,
                            Code = "AUD",
                            EnglishName = "Australian Dollar",
                            NativeName = "Australian Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 48,
                            Code = "BHD",
                            EnglishName = "Bahraini Dinar",
                            NativeName = "دينار بحريني",
                            Symbol = "د.ب.‏"
                        },
                        new
                        {
                            CurrencyCode = 50,
                            Code = "BDT",
                            EnglishName = "Bangladeshi Taka",
                            NativeName = "বাংলাদেশী টাকা",
                            Symbol = "৳"
                        },
                        new
                        {
                            CurrencyCode = 51,
                            Code = "AMD",
                            EnglishName = "Armenian Dram",
                            NativeName = "հայկական դրամ",
                            Symbol = "֏"
                        },
                        new
                        {
                            CurrencyCode = 68,
                            Code = "BOB",
                            EnglishName = "Bolivian Boliviano",
                            NativeName = "boliviano",
                            Symbol = "Bs"
                        },
                        new
                        {
                            CurrencyCode = 84,
                            Code = "BZD",
                            EnglishName = "Belize Dollar",
                            NativeName = "Belize Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 96,
                            Code = "BND",
                            EnglishName = "Brunei Dollar",
                            NativeName = "Dolar Brunei",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 116,
                            Code = "KHR",
                            EnglishName = "Cambodian Riel",
                            NativeName = "រៀល​កម្ពុជា",
                            Symbol = "៛"
                        },
                        new
                        {
                            CurrencyCode = 124,
                            Code = "CAD",
                            EnglishName = "Canadian Dollar",
                            NativeName = "Canadian Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 144,
                            Code = "LKR",
                            EnglishName = "Sri Lankan Rupee",
                            NativeName = "ශ්‍රී ලංකා රුපියල",
                            Symbol = "රු."
                        },
                        new
                        {
                            CurrencyCode = 152,
                            Code = "CLP",
                            EnglishName = "Chilean Peso",
                            NativeName = "CLP",
                            Symbol = "CLP"
                        },
                        new
                        {
                            CurrencyCode = 156,
                            Code = "CNY",
                            EnglishName = "Chinese Yuan",
                            NativeName = "ཡུ་ཨན་",
                            Symbol = "¥"
                        },
                        new
                        {
                            CurrencyCode = 170,
                            Code = "COP",
                            EnglishName = "Colombian Peso",
                            NativeName = "peso colombiano",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 188,
                            Code = "CRC",
                            EnglishName = "Costa Rican Colón",
                            NativeName = "colón costarricense",
                            Symbol = "₡"
                        },
                        new
                        {
                            CurrencyCode = 191,
                            Code = "HRK",
                            EnglishName = "Croatian Kuna",
                            NativeName = "hrvatska kuna",
                            Symbol = "HRK"
                        },
                        new
                        {
                            CurrencyCode = 203,
                            Code = "CZK",
                            EnglishName = "Czech Koruna",
                            NativeName = "česká koruna",
                            Symbol = "Kč"
                        },
                        new
                        {
                            CurrencyCode = 208,
                            Code = "DKK",
                            EnglishName = "Danish Krone",
                            NativeName = "dansk krone",
                            Symbol = "kr."
                        },
                        new
                        {
                            CurrencyCode = 214,
                            Code = "DOP",
                            EnglishName = "Dominican Peso",
                            NativeName = "peso dominicano",
                            Symbol = "RD$"
                        },
                        new
                        {
                            CurrencyCode = 230,
                            Code = "ETB",
                            EnglishName = "Ethiopian Birr",
                            NativeName = "ETB",
                            Symbol = "Br"
                        },
                        new
                        {
                            CurrencyCode = 320,
                            Code = "GTQ",
                            EnglishName = "Guatemalan Quetzal",
                            NativeName = "quetzal",
                            Symbol = "Q"
                        },
                        new
                        {
                            CurrencyCode = 340,
                            Code = "HNL",
                            EnglishName = "Honduran Lempira",
                            NativeName = "lempira hondureño",
                            Symbol = "L"
                        },
                        new
                        {
                            CurrencyCode = 344,
                            Code = "HKD",
                            EnglishName = "Hong Kong Dollar",
                            NativeName = "Hong Kong Dollar",
                            Symbol = "HK$"
                        },
                        new
                        {
                            CurrencyCode = 348,
                            Code = "HUF",
                            EnglishName = "Hungarian Forint",
                            NativeName = "magyar forint",
                            Symbol = "Ft"
                        },
                        new
                        {
                            CurrencyCode = 352,
                            Code = "ISK",
                            EnglishName = "Icelandic Króna",
                            NativeName = "íslensk króna",
                            Symbol = "ISK"
                        },
                        new
                        {
                            CurrencyCode = 356,
                            Code = "INR",
                            EnglishName = "Indian Rupee",
                            NativeName = "ভাৰতীয় ৰুপী",
                            Symbol = "₹"
                        },
                        new
                        {
                            CurrencyCode = 360,
                            Code = "IDR",
                            EnglishName = "Indonesian Rupiah",
                            NativeName = "Rupiah Indonesia",
                            Symbol = "Rp"
                        },
                        new
                        {
                            CurrencyCode = 364,
                            Code = "IRR",
                            EnglishName = "Iranian Rial",
                            NativeName = "ریال ایران",
                            Symbol = "ریال"
                        },
                        new
                        {
                            CurrencyCode = 368,
                            Code = "IQD",
                            EnglishName = "Iraqi Dinar",
                            NativeName = "دينار عراقي",
                            Symbol = "د.ع.‏"
                        },
                        new
                        {
                            CurrencyCode = 376,
                            Code = "ILS",
                            EnglishName = "Israeli New Shekel",
                            NativeName = "שקל חדש",
                            Symbol = "₪"
                        },
                        new
                        {
                            CurrencyCode = 388,
                            Code = "JMD",
                            EnglishName = "Jamaican Dollar",
                            NativeName = "Jamaican Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 392,
                            Code = "JPY",
                            EnglishName = "Japanese Yen",
                            NativeName = "日本円",
                            Symbol = "￥"
                        },
                        new
                        {
                            CurrencyCode = 398,
                            Code = "KZT",
                            EnglishName = "Kazakhstani Tenge",
                            NativeName = "Қазақстан теңгесі",
                            Symbol = "₸"
                        },
                        new
                        {
                            CurrencyCode = 400,
                            Code = "JOD",
                            EnglishName = "Jordanian Dinar",
                            NativeName = "دينار أردني",
                            Symbol = "د.أ.‏"
                        },
                        new
                        {
                            CurrencyCode = 404,
                            Code = "KES",
                            EnglishName = "Kenyan Shilling",
                            NativeName = "Shilingi ya Kenya",
                            Symbol = "Ksh"
                        },
                        new
                        {
                            CurrencyCode = 410,
                            Code = "KRW",
                            EnglishName = "South Korean Won",
                            NativeName = "대한민국 원",
                            Symbol = "₩"
                        },
                        new
                        {
                            CurrencyCode = 414,
                            Code = "KWD",
                            EnglishName = "Kuwaiti Dinar",
                            NativeName = "دينار كويتي",
                            Symbol = "د.ك.‏"
                        },
                        new
                        {
                            CurrencyCode = 417,
                            Code = "KGS",
                            EnglishName = "Kyrgystani Som",
                            NativeName = "Кыргызстан сому",
                            Symbol = "сом"
                        },
                        new
                        {
                            CurrencyCode = 418,
                            Code = "LAK",
                            EnglishName = "Laotian Kip",
                            NativeName = "ລາວ ກີບ",
                            Symbol = "₭"
                        },
                        new
                        {
                            CurrencyCode = 422,
                            Code = "LBP",
                            EnglishName = "Lebanese Pound",
                            NativeName = "جنيه لبناني",
                            Symbol = "ل.ل.‏"
                        },
                        new
                        {
                            CurrencyCode = 434,
                            Code = "LYD",
                            EnglishName = "Libyan Dinar",
                            NativeName = "دينار ليبي",
                            Symbol = "د.ل.‏"
                        },
                        new
                        {
                            CurrencyCode = 446,
                            Code = "MOP",
                            EnglishName = "Macanese Pataca",
                            NativeName = "澳門元",
                            Symbol = "MOP$"
                        },
                        new
                        {
                            CurrencyCode = 458,
                            Code = "MYR",
                            EnglishName = "Malaysian Ringgit",
                            NativeName = "Malaysian Ringgit",
                            Symbol = "RM"
                        },
                        new
                        {
                            CurrencyCode = 462,
                            Code = "MVR",
                            EnglishName = "Maldivian Rufiyaa",
                            NativeName = "MVR",
                            Symbol = "ރ."
                        },
                        new
                        {
                            CurrencyCode = 484,
                            Code = "MXN",
                            EnglishName = "Mexican Peso",
                            NativeName = "peso mexicano",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 496,
                            Code = "MNT",
                            EnglishName = "Mongolian Tugrik",
                            NativeName = "төгрөг",
                            Symbol = "₮"
                        },
                        new
                        {
                            CurrencyCode = 504,
                            Code = "MAD",
                            EnglishName = "Moroccan Dirham",
                            NativeName = "درهم مغربي",
                            Symbol = "د.م.‏"
                        },
                        new
                        {
                            CurrencyCode = 512,
                            Code = "OMR",
                            EnglishName = "Omani Rial",
                            NativeName = "ريال عماني",
                            Symbol = "ر.ع.‏"
                        },
                        new
                        {
                            CurrencyCode = 524,
                            Code = "NPR",
                            EnglishName = "Nepalese Rupee",
                            NativeName = "नेपाली रूपैयाँ",
                            Symbol = "नेरू"
                        },
                        new
                        {
                            CurrencyCode = 554,
                            Code = "NZD",
                            EnglishName = "New Zealand Dollar",
                            NativeName = "New Zealand Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 558,
                            Code = "NIO",
                            EnglishName = "Nicaraguan Córdoba",
                            NativeName = "córdoba nicaragüense",
                            Symbol = "C$"
                        },
                        new
                        {
                            CurrencyCode = 578,
                            Code = "NOK",
                            EnglishName = "Norwegian Krone",
                            NativeName = "norske kroner",
                            Symbol = "kr"
                        },
                        new
                        {
                            CurrencyCode = 586,
                            Code = "PKR",
                            EnglishName = "Pakistani Rupee",
                            NativeName = "روپئیہ",
                            Symbol = "ر"
                        },
                        new
                        {
                            CurrencyCode = 590,
                            Code = "PAB",
                            EnglishName = "Panamanian Balboa",
                            NativeName = "balboa panameño",
                            Symbol = "B/."
                        },
                        new
                        {
                            CurrencyCode = 600,
                            Code = "PYG",
                            EnglishName = "Paraguayan Guarani",
                            NativeName = "guaraní paraguayo",
                            Symbol = "Gs."
                        },
                        new
                        {
                            CurrencyCode = 604,
                            Code = "PEN",
                            EnglishName = "Peruvian Sol",
                            NativeName = "sol peruano",
                            Symbol = "S/"
                        },
                        new
                        {
                            CurrencyCode = 608,
                            Code = "PHP",
                            EnglishName = "Philippine Piso",
                            NativeName = "Philippine Piso",
                            Symbol = "₱"
                        },
                        new
                        {
                            CurrencyCode = 634,
                            Code = "QAR",
                            EnglishName = "Qatari Rial",
                            NativeName = "ريال قطري",
                            Symbol = "ر.ق.‏"
                        },
                        new
                        {
                            CurrencyCode = 643,
                            Code = "RUB",
                            EnglishName = "Russian Ruble",
                            NativeName = "RUB",
                            Symbol = "RUB"
                        },
                        new
                        {
                            CurrencyCode = 646,
                            Code = "RWF",
                            EnglishName = "Rwandan Franc",
                            NativeName = "RWF",
                            Symbol = "RF"
                        },
                        new
                        {
                            CurrencyCode = 682,
                            Code = "SAR",
                            EnglishName = "Saudi Riyal",
                            NativeName = "ريال سعودي",
                            Symbol = "ر.س.‏"
                        },
                        new
                        {
                            CurrencyCode = 702,
                            Code = "SGD",
                            EnglishName = "Singapore Dollar",
                            NativeName = "Singapore Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 704,
                            Code = "VND",
                            EnglishName = "Vietnamese Dong",
                            NativeName = "Đồng Việt Nam",
                            Symbol = "₫"
                        },
                        new
                        {
                            CurrencyCode = 710,
                            Code = "ZAR",
                            EnglishName = "South African Rand",
                            NativeName = "Suid-Afrikaanse rand",
                            Symbol = "R"
                        },
                        new
                        {
                            CurrencyCode = 752,
                            Code = "SEK",
                            EnglishName = "Swedish Krona",
                            NativeName = "ruoŧŧa kruvdno",
                            Symbol = "kr"
                        },
                        new
                        {
                            CurrencyCode = 756,
                            Code = "CHF",
                            EnglishName = "Swiss Franc",
                            NativeName = "Schweizer Franken",
                            Symbol = "CHF"
                        },
                        new
                        {
                            CurrencyCode = 760,
                            Code = "SYP",
                            EnglishName = "Syrian Pound",
                            NativeName = "ليرة سورية",
                            Symbol = "ل.س.‏"
                        },
                        new
                        {
                            CurrencyCode = 764,
                            Code = "THB",
                            EnglishName = "Thai Baht",
                            NativeName = "บาท",
                            Symbol = "฿"
                        },
                        new
                        {
                            CurrencyCode = 780,
                            Code = "TTD",
                            EnglishName = "Trinidad & Tobago Dollar",
                            NativeName = "Trinidad & Tobago Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 784,
                            Code = "AED",
                            EnglishName = "United Arab Emirates Dirham",
                            NativeName = "درهم إماراتي",
                            Symbol = "د.إ.‏"
                        },
                        new
                        {
                            CurrencyCode = 788,
                            Code = "TND",
                            EnglishName = "Tunisian Dinar",
                            NativeName = "دينار تونسي",
                            Symbol = "د.ت.‏"
                        },
                        new
                        {
                            CurrencyCode = 807,
                            Code = "MKD",
                            EnglishName = "Macedonian Denar",
                            NativeName = "Македонски денар",
                            Symbol = "ден"
                        },
                        new
                        {
                            CurrencyCode = 818,
                            Code = "EGP",
                            EnglishName = "Egyptian Pound",
                            NativeName = "جنيه مصري",
                            Symbol = "ج.م.‏"
                        },
                        new
                        {
                            CurrencyCode = 826,
                            Code = "GBP",
                            EnglishName = "British Pound",
                            NativeName = "Punt Prydain",
                            Symbol = "£"
                        },
                        new
                        {
                            CurrencyCode = 840,
                            Code = "USD",
                            EnglishName = "US Dollar",
                            NativeName = "US ᎠᏕᎳ",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 858,
                            Code = "UYU",
                            EnglishName = "Uruguayan Peso",
                            NativeName = "peso uruguayo",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 860,
                            Code = "UZS",
                            EnglishName = "Uzbekistani Som",
                            NativeName = "Ўзбекистон сўм",
                            Symbol = "сўм"
                        },
                        new
                        {
                            CurrencyCode = 886,
                            Code = "YER",
                            EnglishName = "Yemeni Rial",
                            NativeName = "ريال يمني",
                            Symbol = "ر.ي.‏"
                        },
                        new
                        {
                            CurrencyCode = 901,
                            Code = "TWD",
                            EnglishName = "New Taiwan Dollar",
                            NativeName = "新台幣",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 941,
                            Code = "RSD",
                            EnglishName = "Serbian Dinar",
                            NativeName = "Српски динар",
                            Symbol = "RSD"
                        },
                        new
                        {
                            CurrencyCode = 944,
                            Code = "AZN",
                            EnglishName = "Azerbaijani Manat",
                            NativeName = "AZN",
                            Symbol = "₼"
                        },
                        new
                        {
                            CurrencyCode = 946,
                            Code = "RON",
                            EnglishName = "Romanian Leu",
                            NativeName = "leu românesc",
                            Symbol = "RON"
                        },
                        new
                        {
                            CurrencyCode = 949,
                            Code = "TRY",
                            EnglishName = "Turkish Lira",
                            NativeName = "Türk Lirası",
                            Symbol = "₺"
                        },
                        new
                        {
                            CurrencyCode = 952,
                            Code = "XOF",
                            EnglishName = "West African CFA Franc",
                            NativeName = "Mbuuɗu Seefaa BCEAO",
                            Symbol = "CFA"
                        },
                        new
                        {
                            CurrencyCode = 971,
                            Code = "AFN",
                            EnglishName = "Afghan Afghani",
                            NativeName = "افغانی افغانستان",
                            Symbol = "؋"
                        },
                        new
                        {
                            CurrencyCode = 972,
                            Code = "TJS",
                            EnglishName = "Tajikistani Somoni",
                            NativeName = "Сомонӣ",
                            Symbol = "сом."
                        },
                        new
                        {
                            CurrencyCode = 975,
                            Code = "BGN",
                            EnglishName = "Bulgarian Lev",
                            NativeName = "Български лев",
                            Symbol = "лв."
                        },
                        new
                        {
                            CurrencyCode = 977,
                            Code = "BAM",
                            EnglishName = "Bosnia-Herzegovina Convertible Mark",
                            NativeName = "Конвертибилна марка",
                            Symbol = "КМ"
                        },
                        new
                        {
                            CurrencyCode = 978,
                            Code = "EUR",
                            EnglishName = "Euro",
                            NativeName = "euro",
                            Symbol = "€"
                        },
                        new
                        {
                            CurrencyCode = 980,
                            Code = "UAH",
                            EnglishName = "Ukrainian Hryvnia",
                            NativeName = "українська гривня",
                            Symbol = "₴"
                        },
                        new
                        {
                            CurrencyCode = 981,
                            Code = "GEL",
                            EnglishName = "Georgian Lari",
                            NativeName = "ქართული ლარი",
                            Symbol = "₾"
                        },
                        new
                        {
                            CurrencyCode = 985,
                            Code = "PLN",
                            EnglishName = "Polish Zloty",
                            NativeName = "złoty polski",
                            Symbol = "zł"
                        },
                        new
                        {
                            CurrencyCode = 986,
                            Code = "BRL",
                            EnglishName = "Brazilian Real",
                            NativeName = "Real brasileiro",
                            Symbol = "R$"
                        });
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Budget", b =>
                {
                    b.HasOne("raBudget.Domain.Models.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetBalance", b =>
                {
                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "IncomeTotal", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "SavingTotal", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "SpendingTotal", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "TotalBalance", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "UnassignedFunds", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.Navigation("IncomeTotal");

                    b.Navigation("SavingTotal");

                    b.Navigation("SpendingTotal");

                    b.Navigation("TotalBalance");

                    b.Navigation("UnassignedFunds");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.BudgetCategoryIcon", "BudgetCategoryIcon")
                        .WithMany()
                        .HasForeignKey("BudgetCategoryIconId");

                    b.HasOne("raBudget.Domain.Entities.Budget", null)
                        .WithMany("BudgetCategories")
                        .HasForeignKey("BudgetId");

                    b.Navigation("BudgetCategoryIcon");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory+BudgetedAmount", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.BudgetCategory", null)
                        .WithMany("BudgetedAmounts")
                        .HasForeignKey("BudgetCategoryId");

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "Amount", b1 =>
                        {
                            b1.Property<Guid>("BudgetedAmountId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetedAmountId");

                            b1.ToTable("BudgetedAmount");

                            b1.WithOwner()
                                .HasForeignKey("BudgetedAmountId");
                        });

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.SubTransaction", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.Transaction", null)
                        .WithMany("SubTransactions")
                        .HasForeignKey("TransactionId");

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "Amount", b1 =>
                        {
                            b1.Property<Guid>("SubTransactionId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("SubTransactionId");

                            b1.ToTable("SubTransaction");

                            b1.WithOwner()
                                .HasForeignKey("SubTransactionId");
                        });

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Transaction", b =>
                {
                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "Amount", b1 =>
                        {
                            b1.Property<Guid>("TransactionId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("TransactionId");

                            b1.ToTable("Transactions");

                            b1.WithOwner()
                                .HasForeignKey("TransactionId");
                        });

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Budget", b =>
                {
                    b.Navigation("BudgetCategories");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory", b =>
                {
                    b.Navigation("BudgetedAmounts");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Transaction", b =>
                {
                    b.Navigation("SubTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
