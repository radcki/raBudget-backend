// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using raBudget.Infrastructure.Database;

namespace raBudget.Api.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    [Migration("20201229225958_BuudgetBalance3")]
    partial class BuudgetBalance3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("raBudget.Domain.Entities.Allocation", b =>
                {
                    b.Property<Guid>("AllocationId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AllocationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("SourceBudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TargetBudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.HasKey("AllocationId");

                    b.ToTable("Allocations");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Budget", b =>
                {
                    b.Property<Guid>("BudgetId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CurrencyCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OwnerUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BudgetId");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetBalance", b =>
                {
                    b.Property<Guid>("BudgetId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BudgetId");

                    b.ToTable("BudgetBalances");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory", b =>
                {
                    b.Property<Guid>("BudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BudgetCategoryIconId")
                        .HasColumnType("char(36)");

                    b.Property<int>("BudgetCategoryType")
                        .HasColumnType("int");

                    b.Property<Guid?>("BudgetId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("BudgetCategoryId");

                    b.HasIndex("BudgetCategoryIconId");

                    b.HasIndex("BudgetId");

                    b.ToTable("BudgetCategories");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory+BudgetedAmount", b =>
                {
                    b.Property<Guid>("BudgetedAmountId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BudgetedAmountId");

                    b.HasIndex("BudgetCategoryId");

                    b.ToTable("BudgetedAmount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategoryBalance", b =>
                {
                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<Guid>("BudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Year", "Month", "BudgetCategoryId");

                    b.ToTable("BudgetCategoryBalances");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategoryIcon", b =>
                {
                    b.Property<Guid>("BudgetCategoryIconId")
                        .HasColumnType("char(36)");

                    b.Property<string>("IconKey")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BudgetCategoryIconId");

                    b.ToTable("BudgetCategoryIcons");

                    b.HasData(
                        new
                        {
                            BudgetCategoryIconId = new Guid("58888397-7fae-4a68-8324-9e0ca35ccb73"),
                            IconKey = "mdi-car"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("6dba3097-0b91-4f4c-887d-7aecb49a96e4"),
                            IconKey = "mdi-cart"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("dc5b2f1a-6933-4393-b25d-0e21d04d9847"),
                            IconKey = "mdi-train-car"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("1411a6bd-7ae9-48ff-9b43-afcf82b8444d"),
                            IconKey = "mdi-wallet-travel"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("90d8e26b-4f97-4c6c-ad74-63b7b5a57f54"),
                            IconKey = "mdi-wrench"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("3b18d75d-3042-45b2-9d92-536c3dc56086"),
                            IconKey = "mdi-basket"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("9c1ac98e-fa05-420a-9265-e9426cbd520a"),
                            IconKey = "mdi-gamepad"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("f1d9bb88-3c6a-406c-8d19-bbc85457476b"),
                            IconKey = "mdi-phone"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("a91d893a-bfb9-4f1f-9d43-02db2def55f7"),
                            IconKey = "mdi-airplane"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("437e103c-e9d5-4545-b183-ee9a7c2213b9"),
                            IconKey = "mdi-currency-usd-circle-outline"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("a740c356-d88a-4174-aaa2-28afbef6af22"),
                            IconKey = "mdi-format-paint"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("c758a01c-96ca-4318-b03e-d3c193a7c84f"),
                            IconKey = "mdi-gamepad-square"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("5a3025a4-311d-4ef4-bf2d-1004b505630d"),
                            IconKey = "mdi-laptop"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("50193aab-c185-499f-9e17-bedc755e5326"),
                            IconKey = "mdi-camera"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("1fd81b8e-b292-4ef1-a81b-a9e0640ff14a"),
                            IconKey = "mdi-city"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("cacad34c-cd7a-4648-9abd-405fe28745e9"),
                            IconKey = "mdi-fire"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("677cb1d5-9782-4fae-83ca-b3466c8eabe3"),
                            IconKey = "mdi-dumbbell"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("b5704933-344a-4d22-931f-9cda80f87553"),
                            IconKey = "mdi-coffee"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("e847908f-ec27-4d35-8c9c-fbd5b4ce26fc"),
                            IconKey = "mdi-dice-5"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("273282d7-67cc-4ee6-be82-2b6157029f5c"),
                            IconKey = "mdi-beach"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("8360bac5-be64-4c65-b38b-cbd9344945fe"),
                            IconKey = "mdi-bus-articulated-front"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("c273e9cf-7048-47de-b5af-72b11f4b643f"),
                            IconKey = "mdi-smoking"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("70839907-899f-4e83-b1ab-31357c31a6b0"),
                            IconKey = "mdi-fridge"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("ba7d30d0-7d0f-40c5-84d5-a2f3fa71ca3b"),
                            IconKey = "mdi-baby-face"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("a0221dc0-5c94-4c4f-a46c-3a4b2ccb675f"),
                            IconKey = "mdi-paw"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("bff44811-a765-4e7b-81b5-a3653c7c74d6"),
                            IconKey = "mdi-bandage"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("bd55b2d7-ebf4-49a4-99a8-7d21ddea0eb0"),
                            IconKey = "mdi-human"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("3ffee48f-8f0c-4c37-90de-de6d0f086ab8"),
                            IconKey = "mdi-sofa"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("7f3ea79e-37b5-4441-a5cb-067fa7c5a62a"),
                            IconKey = "mdi-memory"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("cdc454c2-1e6c-4637-acc1-ee66e7cb1583"),
                            IconKey = "mdi-cellphone-android"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("ee74061c-585d-4753-91c0-7bc213dcddda"),
                            IconKey = "mdi-speaker"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("cfc8325b-c8c4-4c53-b16f-44029111b8e0"),
                            IconKey = "mdi-sim"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("6157da72-bda1-48e6-b471-ae886ff17a5e"),
                            IconKey = "mdi-silverware-fork-knife"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("e27cee2d-4936-40dc-9e49-c66873aeb455"),
                            IconKey = "mdi-food"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("fc064073-bde3-4ed3-9027-04fc50a0ae27"),
                            IconKey = "mdi-gas-station"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("3d779c9a-17d0-4a97-b23c-2bb2aca63381"),
                            IconKey = "mdi-hospital-building"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("e524d610-7b47-43a2-85db-38507cfdca0d"),
                            IconKey = "mdi-shopping"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("89c51992-11d6-4e2c-953f-d9d5dacb28d5"),
                            IconKey = "mdi-glass-cocktail"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("a9f3f1e7-9821-4740-9cde-f65082ce41a8"),
                            IconKey = "mdi-filmstrip"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("999907dd-44b2-4d3e-bb2d-febdc7f5c188"),
                            IconKey = "mdi-bike"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("cb9a6cb8-571f-487a-9e39-9ea4fa5052ef"),
                            IconKey = "mdi-motorbike"
                        },
                        new
                        {
                            BudgetCategoryIconId = new Guid("98e03a6d-f172-4c65-99e3-9cb8d19d165f"),
                            IconKey = "mdi-wallet-giftcard"
                        });
                });

            modelBuilder.Entity("raBudget.Domain.Entities.SubTransaction", b =>
                {
                    b.Property<Guid>("SubTransactionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("ParentTransactionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("char(36)");

                    b.HasKey("SubTransactionId");

                    b.HasIndex("TransactionId");

                    b.ToTable("SubTransaction");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BudgetCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("raBudget.Domain.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyCode")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EnglishName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NativeName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Symbol")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CurrencyCode");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            CurrencyCode = 8,
                            Code = "ALL",
                            EnglishName = "Albanian Lek",
                            NativeName = "Leku shqiptar",
                            Symbol = "Lekë"
                        },
                        new
                        {
                            CurrencyCode = 12,
                            Code = "DZD",
                            EnglishName = "Algerian Dinar",
                            NativeName = "دينار جزائري",
                            Symbol = "د.ج.‏"
                        },
                        new
                        {
                            CurrencyCode = 32,
                            Code = "ARS",
                            EnglishName = "Argentine Peso",
                            NativeName = "peso argentino",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 36,
                            Code = "AUD",
                            EnglishName = "Australian Dollar",
                            NativeName = "Australian Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 48,
                            Code = "BHD",
                            EnglishName = "Bahraini Dinar",
                            NativeName = "دينار بحريني",
                            Symbol = "د.ب.‏"
                        },
                        new
                        {
                            CurrencyCode = 50,
                            Code = "BDT",
                            EnglishName = "Bangladeshi Taka",
                            NativeName = "বাংলাদেশী টাকা",
                            Symbol = "৳"
                        },
                        new
                        {
                            CurrencyCode = 51,
                            Code = "AMD",
                            EnglishName = "Armenian Dram",
                            NativeName = "հայկական դրամ",
                            Symbol = "֏"
                        },
                        new
                        {
                            CurrencyCode = 68,
                            Code = "BOB",
                            EnglishName = "Bolivian Boliviano",
                            NativeName = "boliviano",
                            Symbol = "Bs"
                        },
                        new
                        {
                            CurrencyCode = 84,
                            Code = "BZD",
                            EnglishName = "Belize Dollar",
                            NativeName = "Belize Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 96,
                            Code = "BND",
                            EnglishName = "Brunei Dollar",
                            NativeName = "Dolar Brunei",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 116,
                            Code = "KHR",
                            EnglishName = "Cambodian Riel",
                            NativeName = "រៀល​កម្ពុជា",
                            Symbol = "៛"
                        },
                        new
                        {
                            CurrencyCode = 124,
                            Code = "CAD",
                            EnglishName = "Canadian Dollar",
                            NativeName = "Canadian Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 144,
                            Code = "LKR",
                            EnglishName = "Sri Lankan Rupee",
                            NativeName = "ශ්‍රී ලංකා රුපියල",
                            Symbol = "රු."
                        },
                        new
                        {
                            CurrencyCode = 152,
                            Code = "CLP",
                            EnglishName = "Chilean Peso",
                            NativeName = "CLP",
                            Symbol = "CLP"
                        },
                        new
                        {
                            CurrencyCode = 156,
                            Code = "CNY",
                            EnglishName = "Chinese Yuan",
                            NativeName = "ཡུ་ཨན་",
                            Symbol = "¥"
                        },
                        new
                        {
                            CurrencyCode = 170,
                            Code = "COP",
                            EnglishName = "Colombian Peso",
                            NativeName = "peso colombiano",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 188,
                            Code = "CRC",
                            EnglishName = "Costa Rican Colón",
                            NativeName = "colón costarricense",
                            Symbol = "₡"
                        },
                        new
                        {
                            CurrencyCode = 191,
                            Code = "HRK",
                            EnglishName = "Croatian Kuna",
                            NativeName = "hrvatska kuna",
                            Symbol = "HRK"
                        },
                        new
                        {
                            CurrencyCode = 203,
                            Code = "CZK",
                            EnglishName = "Czech Koruna",
                            NativeName = "česká koruna",
                            Symbol = "Kč"
                        },
                        new
                        {
                            CurrencyCode = 208,
                            Code = "DKK",
                            EnglishName = "Danish Krone",
                            NativeName = "dansk krone",
                            Symbol = "kr."
                        },
                        new
                        {
                            CurrencyCode = 214,
                            Code = "DOP",
                            EnglishName = "Dominican Peso",
                            NativeName = "peso dominicano",
                            Symbol = "RD$"
                        },
                        new
                        {
                            CurrencyCode = 230,
                            Code = "ETB",
                            EnglishName = "Ethiopian Birr",
                            NativeName = "ETB",
                            Symbol = "Br"
                        },
                        new
                        {
                            CurrencyCode = 320,
                            Code = "GTQ",
                            EnglishName = "Guatemalan Quetzal",
                            NativeName = "quetzal",
                            Symbol = "Q"
                        },
                        new
                        {
                            CurrencyCode = 340,
                            Code = "HNL",
                            EnglishName = "Honduran Lempira",
                            NativeName = "lempira hondureño",
                            Symbol = "L"
                        },
                        new
                        {
                            CurrencyCode = 344,
                            Code = "HKD",
                            EnglishName = "Hong Kong Dollar",
                            NativeName = "Hong Kong Dollar",
                            Symbol = "HK$"
                        },
                        new
                        {
                            CurrencyCode = 348,
                            Code = "HUF",
                            EnglishName = "Hungarian Forint",
                            NativeName = "magyar forint",
                            Symbol = "Ft"
                        },
                        new
                        {
                            CurrencyCode = 352,
                            Code = "ISK",
                            EnglishName = "Icelandic Króna",
                            NativeName = "íslensk króna",
                            Symbol = "ISK"
                        },
                        new
                        {
                            CurrencyCode = 356,
                            Code = "INR",
                            EnglishName = "Indian Rupee",
                            NativeName = "ভাৰতীয় ৰুপী",
                            Symbol = "₹"
                        },
                        new
                        {
                            CurrencyCode = 360,
                            Code = "IDR",
                            EnglishName = "Indonesian Rupiah",
                            NativeName = "Rupiah Indonesia",
                            Symbol = "Rp"
                        },
                        new
                        {
                            CurrencyCode = 364,
                            Code = "IRR",
                            EnglishName = "Iranian Rial",
                            NativeName = "ریال ایران",
                            Symbol = "ریال"
                        },
                        new
                        {
                            CurrencyCode = 368,
                            Code = "IQD",
                            EnglishName = "Iraqi Dinar",
                            NativeName = "دينار عراقي",
                            Symbol = "د.ع.‏"
                        },
                        new
                        {
                            CurrencyCode = 376,
                            Code = "ILS",
                            EnglishName = "Israeli New Shekel",
                            NativeName = "שקל חדש",
                            Symbol = "₪"
                        },
                        new
                        {
                            CurrencyCode = 388,
                            Code = "JMD",
                            EnglishName = "Jamaican Dollar",
                            NativeName = "Jamaican Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 392,
                            Code = "JPY",
                            EnglishName = "Japanese Yen",
                            NativeName = "日本円",
                            Symbol = "￥"
                        },
                        new
                        {
                            CurrencyCode = 398,
                            Code = "KZT",
                            EnglishName = "Kazakhstani Tenge",
                            NativeName = "Қазақстан теңгесі",
                            Symbol = "₸"
                        },
                        new
                        {
                            CurrencyCode = 400,
                            Code = "JOD",
                            EnglishName = "Jordanian Dinar",
                            NativeName = "دينار أردني",
                            Symbol = "د.أ.‏"
                        },
                        new
                        {
                            CurrencyCode = 404,
                            Code = "KES",
                            EnglishName = "Kenyan Shilling",
                            NativeName = "Shilingi ya Kenya",
                            Symbol = "Ksh"
                        },
                        new
                        {
                            CurrencyCode = 410,
                            Code = "KRW",
                            EnglishName = "South Korean Won",
                            NativeName = "대한민국 원",
                            Symbol = "₩"
                        },
                        new
                        {
                            CurrencyCode = 414,
                            Code = "KWD",
                            EnglishName = "Kuwaiti Dinar",
                            NativeName = "دينار كويتي",
                            Symbol = "د.ك.‏"
                        },
                        new
                        {
                            CurrencyCode = 417,
                            Code = "KGS",
                            EnglishName = "Kyrgystani Som",
                            NativeName = "Кыргызстан сому",
                            Symbol = "сом"
                        },
                        new
                        {
                            CurrencyCode = 418,
                            Code = "LAK",
                            EnglishName = "Laotian Kip",
                            NativeName = "ລາວ ກີບ",
                            Symbol = "₭"
                        },
                        new
                        {
                            CurrencyCode = 422,
                            Code = "LBP",
                            EnglishName = "Lebanese Pound",
                            NativeName = "جنيه لبناني",
                            Symbol = "ل.ل.‏"
                        },
                        new
                        {
                            CurrencyCode = 434,
                            Code = "LYD",
                            EnglishName = "Libyan Dinar",
                            NativeName = "دينار ليبي",
                            Symbol = "د.ل.‏"
                        },
                        new
                        {
                            CurrencyCode = 446,
                            Code = "MOP",
                            EnglishName = "Macanese Pataca",
                            NativeName = "澳門元",
                            Symbol = "MOP$"
                        },
                        new
                        {
                            CurrencyCode = 458,
                            Code = "MYR",
                            EnglishName = "Malaysian Ringgit",
                            NativeName = "Malaysian Ringgit",
                            Symbol = "RM"
                        },
                        new
                        {
                            CurrencyCode = 462,
                            Code = "MVR",
                            EnglishName = "Maldivian Rufiyaa",
                            NativeName = "MVR",
                            Symbol = "ރ."
                        },
                        new
                        {
                            CurrencyCode = 484,
                            Code = "MXN",
                            EnglishName = "Mexican Peso",
                            NativeName = "peso mexicano",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 496,
                            Code = "MNT",
                            EnglishName = "Mongolian Tugrik",
                            NativeName = "төгрөг",
                            Symbol = "₮"
                        },
                        new
                        {
                            CurrencyCode = 504,
                            Code = "MAD",
                            EnglishName = "Moroccan Dirham",
                            NativeName = "درهم مغربي",
                            Symbol = "د.م.‏"
                        },
                        new
                        {
                            CurrencyCode = 512,
                            Code = "OMR",
                            EnglishName = "Omani Rial",
                            NativeName = "ريال عماني",
                            Symbol = "ر.ع.‏"
                        },
                        new
                        {
                            CurrencyCode = 524,
                            Code = "NPR",
                            EnglishName = "Nepalese Rupee",
                            NativeName = "नेपाली रूपैयाँ",
                            Symbol = "नेरू"
                        },
                        new
                        {
                            CurrencyCode = 554,
                            Code = "NZD",
                            EnglishName = "New Zealand Dollar",
                            NativeName = "New Zealand Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 558,
                            Code = "NIO",
                            EnglishName = "Nicaraguan Córdoba",
                            NativeName = "córdoba nicaragüense",
                            Symbol = "C$"
                        },
                        new
                        {
                            CurrencyCode = 578,
                            Code = "NOK",
                            EnglishName = "Norwegian Krone",
                            NativeName = "norske kroner",
                            Symbol = "kr"
                        },
                        new
                        {
                            CurrencyCode = 586,
                            Code = "PKR",
                            EnglishName = "Pakistani Rupee",
                            NativeName = "روپئیہ",
                            Symbol = "ر"
                        },
                        new
                        {
                            CurrencyCode = 590,
                            Code = "PAB",
                            EnglishName = "Panamanian Balboa",
                            NativeName = "balboa panameño",
                            Symbol = "B/."
                        },
                        new
                        {
                            CurrencyCode = 600,
                            Code = "PYG",
                            EnglishName = "Paraguayan Guarani",
                            NativeName = "guaraní paraguayo",
                            Symbol = "Gs."
                        },
                        new
                        {
                            CurrencyCode = 604,
                            Code = "PEN",
                            EnglishName = "Peruvian Sol",
                            NativeName = "sol peruano",
                            Symbol = "S/"
                        },
                        new
                        {
                            CurrencyCode = 608,
                            Code = "PHP",
                            EnglishName = "Philippine Piso",
                            NativeName = "Philippine Piso",
                            Symbol = "₱"
                        },
                        new
                        {
                            CurrencyCode = 634,
                            Code = "QAR",
                            EnglishName = "Qatari Rial",
                            NativeName = "ريال قطري",
                            Symbol = "ر.ق.‏"
                        },
                        new
                        {
                            CurrencyCode = 643,
                            Code = "RUB",
                            EnglishName = "Russian Ruble",
                            NativeName = "RUB",
                            Symbol = "RUB"
                        },
                        new
                        {
                            CurrencyCode = 646,
                            Code = "RWF",
                            EnglishName = "Rwandan Franc",
                            NativeName = "RWF",
                            Symbol = "RF"
                        },
                        new
                        {
                            CurrencyCode = 682,
                            Code = "SAR",
                            EnglishName = "Saudi Riyal",
                            NativeName = "ريال سعودي",
                            Symbol = "ر.س.‏"
                        },
                        new
                        {
                            CurrencyCode = 702,
                            Code = "SGD",
                            EnglishName = "Singapore Dollar",
                            NativeName = "Singapore Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 704,
                            Code = "VND",
                            EnglishName = "Vietnamese Dong",
                            NativeName = "Đồng Việt Nam",
                            Symbol = "₫"
                        },
                        new
                        {
                            CurrencyCode = 710,
                            Code = "ZAR",
                            EnglishName = "South African Rand",
                            NativeName = "Suid-Afrikaanse rand",
                            Symbol = "R"
                        },
                        new
                        {
                            CurrencyCode = 752,
                            Code = "SEK",
                            EnglishName = "Swedish Krona",
                            NativeName = "ruoŧŧa kruvdno",
                            Symbol = "kr"
                        },
                        new
                        {
                            CurrencyCode = 756,
                            Code = "CHF",
                            EnglishName = "Swiss Franc",
                            NativeName = "Schweizer Franken",
                            Symbol = "CHF"
                        },
                        new
                        {
                            CurrencyCode = 760,
                            Code = "SYP",
                            EnglishName = "Syrian Pound",
                            NativeName = "ليرة سورية",
                            Symbol = "ل.س.‏"
                        },
                        new
                        {
                            CurrencyCode = 764,
                            Code = "THB",
                            EnglishName = "Thai Baht",
                            NativeName = "บาท",
                            Symbol = "฿"
                        },
                        new
                        {
                            CurrencyCode = 780,
                            Code = "TTD",
                            EnglishName = "Trinidad & Tobago Dollar",
                            NativeName = "Trinidad & Tobago Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 784,
                            Code = "AED",
                            EnglishName = "United Arab Emirates Dirham",
                            NativeName = "درهم إماراتي",
                            Symbol = "د.إ.‏"
                        },
                        new
                        {
                            CurrencyCode = 788,
                            Code = "TND",
                            EnglishName = "Tunisian Dinar",
                            NativeName = "دينار تونسي",
                            Symbol = "د.ت.‏"
                        },
                        new
                        {
                            CurrencyCode = 807,
                            Code = "MKD",
                            EnglishName = "Macedonian Denar",
                            NativeName = "Македонски денар",
                            Symbol = "ден"
                        },
                        new
                        {
                            CurrencyCode = 818,
                            Code = "EGP",
                            EnglishName = "Egyptian Pound",
                            NativeName = "جنيه مصري",
                            Symbol = "ج.م.‏"
                        },
                        new
                        {
                            CurrencyCode = 826,
                            Code = "GBP",
                            EnglishName = "British Pound",
                            NativeName = "Punt Prydain",
                            Symbol = "£"
                        },
                        new
                        {
                            CurrencyCode = 840,
                            Code = "USD",
                            EnglishName = "US Dollar",
                            NativeName = "US ᎠᏕᎳ",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 858,
                            Code = "UYU",
                            EnglishName = "Uruguayan Peso",
                            NativeName = "peso uruguayo",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 860,
                            Code = "UZS",
                            EnglishName = "Uzbekistani Som",
                            NativeName = "Ўзбекистон сўм",
                            Symbol = "сўм"
                        },
                        new
                        {
                            CurrencyCode = 886,
                            Code = "YER",
                            EnglishName = "Yemeni Rial",
                            NativeName = "ريال يمني",
                            Symbol = "ر.ي.‏"
                        },
                        new
                        {
                            CurrencyCode = 901,
                            Code = "TWD",
                            EnglishName = "New Taiwan Dollar",
                            NativeName = "新台幣",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 941,
                            Code = "RSD",
                            EnglishName = "Serbian Dinar",
                            NativeName = "Српски динар",
                            Symbol = "RSD"
                        },
                        new
                        {
                            CurrencyCode = 944,
                            Code = "AZN",
                            EnglishName = "Azerbaijani Manat",
                            NativeName = "AZN",
                            Symbol = "₼"
                        },
                        new
                        {
                            CurrencyCode = 946,
                            Code = "RON",
                            EnglishName = "Romanian Leu",
                            NativeName = "leu românesc",
                            Symbol = "RON"
                        },
                        new
                        {
                            CurrencyCode = 949,
                            Code = "TRY",
                            EnglishName = "Turkish Lira",
                            NativeName = "Türk Lirası",
                            Symbol = "₺"
                        },
                        new
                        {
                            CurrencyCode = 952,
                            Code = "XOF",
                            EnglishName = "West African CFA Franc",
                            NativeName = "Mbuuɗu Seefaa BCEAO",
                            Symbol = "CFA"
                        },
                        new
                        {
                            CurrencyCode = 971,
                            Code = "AFN",
                            EnglishName = "Afghan Afghani",
                            NativeName = "افغانی افغانستان",
                            Symbol = "؋"
                        },
                        new
                        {
                            CurrencyCode = 972,
                            Code = "TJS",
                            EnglishName = "Tajikistani Somoni",
                            NativeName = "Сомонӣ",
                            Symbol = "сом."
                        },
                        new
                        {
                            CurrencyCode = 975,
                            Code = "BGN",
                            EnglishName = "Bulgarian Lev",
                            NativeName = "Български лев",
                            Symbol = "лв."
                        },
                        new
                        {
                            CurrencyCode = 977,
                            Code = "BAM",
                            EnglishName = "Bosnia-Herzegovina Convertible Mark",
                            NativeName = "Конвертибилна марка",
                            Symbol = "КМ"
                        },
                        new
                        {
                            CurrencyCode = 978,
                            Code = "EUR",
                            EnglishName = "Euro",
                            NativeName = "euro",
                            Symbol = "€"
                        },
                        new
                        {
                            CurrencyCode = 980,
                            Code = "UAH",
                            EnglishName = "Ukrainian Hryvnia",
                            NativeName = "українська гривня",
                            Symbol = "₴"
                        },
                        new
                        {
                            CurrencyCode = 981,
                            Code = "GEL",
                            EnglishName = "Georgian Lari",
                            NativeName = "ქართული ლარი",
                            Symbol = "₾"
                        },
                        new
                        {
                            CurrencyCode = 985,
                            Code = "PLN",
                            EnglishName = "Polish Zloty",
                            NativeName = "złoty polski",
                            Symbol = "zł"
                        },
                        new
                        {
                            CurrencyCode = 986,
                            Code = "BRL",
                            EnglishName = "Brazilian Real",
                            NativeName = "Real brasileiro",
                            Symbol = "R$"
                        });
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Allocation", b =>
                {
                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "Amount", b1 =>
                        {
                            b1.Property<Guid>("AllocationId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("AllocationId");

                            b1.ToTable("Allocations");

                            b1.WithOwner()
                                .HasForeignKey("AllocationId");
                        });

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Budget", b =>
                {
                    b.HasOne("raBudget.Domain.Models.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetBalance", b =>
                {
                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "IncomeTotal", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "SavingTotal", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "SpendingTotal", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "TotalBalance", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "UnassignedFunds", b1 =>
                        {
                            b1.Property<Guid>("BudgetBalanceBudgetId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetBalanceBudgetId");

                            b1.ToTable("BudgetBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetBalanceBudgetId");
                        });

                    b.Navigation("IncomeTotal");

                    b.Navigation("SavingTotal");

                    b.Navigation("SpendingTotal");

                    b.Navigation("TotalBalance");

                    b.Navigation("UnassignedFunds");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.BudgetCategoryIcon", "BudgetCategoryIcon")
                        .WithMany()
                        .HasForeignKey("BudgetCategoryIconId");

                    b.HasOne("raBudget.Domain.Entities.Budget", null)
                        .WithMany("BudgetCategories")
                        .HasForeignKey("BudgetId");

                    b.Navigation("BudgetCategoryIcon");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory+BudgetedAmount", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.BudgetCategory", null)
                        .WithMany("BudgetedAmounts")
                        .HasForeignKey("BudgetCategoryId");

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "Amount", b1 =>
                        {
                            b1.Property<Guid>("BudgetedAmountId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetedAmountId");

                            b1.ToTable("BudgetedAmount");

                            b1.WithOwner()
                                .HasForeignKey("BudgetedAmountId");
                        });

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategoryBalance", b =>
                {
                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "AllocationsTotal", b1 =>
                        {
                            b1.Property<int>("BudgetCategoryBalanceYear")
                                .HasColumnType("int");

                            b1.Property<int>("BudgetCategoryBalanceMonth")
                                .HasColumnType("int");

                            b1.Property<Guid>("BudgetCategoryBalanceBudgetCategoryId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetCategoryBalanceYear", "BudgetCategoryBalanceMonth", "BudgetCategoryBalanceBudgetCategoryId");

                            b1.ToTable("BudgetCategoryBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetCategoryBalanceYear", "BudgetCategoryBalanceMonth", "BudgetCategoryBalanceBudgetCategoryId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "BudgetedAmount", b1 =>
                        {
                            b1.Property<int>("BudgetCategoryBalanceYear")
                                .HasColumnType("int");

                            b1.Property<int>("BudgetCategoryBalanceMonth")
                                .HasColumnType("int");

                            b1.Property<Guid>("BudgetCategoryBalanceBudgetCategoryId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetCategoryBalanceYear", "BudgetCategoryBalanceMonth", "BudgetCategoryBalanceBudgetCategoryId");

                            b1.ToTable("BudgetCategoryBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetCategoryBalanceYear", "BudgetCategoryBalanceMonth", "BudgetCategoryBalanceBudgetCategoryId");
                        });

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "TransactionsTotal", b1 =>
                        {
                            b1.Property<int>("BudgetCategoryBalanceYear")
                                .HasColumnType("int");

                            b1.Property<int>("BudgetCategoryBalanceMonth")
                                .HasColumnType("int");

                            b1.Property<Guid>("BudgetCategoryBalanceBudgetCategoryId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("BudgetCategoryBalanceYear", "BudgetCategoryBalanceMonth", "BudgetCategoryBalanceBudgetCategoryId");

                            b1.ToTable("BudgetCategoryBalances");

                            b1.WithOwner()
                                .HasForeignKey("BudgetCategoryBalanceYear", "BudgetCategoryBalanceMonth", "BudgetCategoryBalanceBudgetCategoryId");
                        });

                    b.Navigation("AllocationsTotal");

                    b.Navigation("BudgetedAmount");

                    b.Navigation("TransactionsTotal");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.SubTransaction", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.Transaction", null)
                        .WithMany("SubTransactions")
                        .HasForeignKey("TransactionId");

                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "Amount", b1 =>
                        {
                            b1.Property<Guid>("SubTransactionId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("SubTransactionId");

                            b1.ToTable("SubTransaction");

                            b1.WithOwner()
                                .HasForeignKey("SubTransactionId");
                        });

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Transaction", b =>
                {
                    b.OwnsOne("raBudget.Domain.ValueObjects.MoneyAmount", "Amount", b1 =>
                        {
                            b1.Property<Guid>("TransactionId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<int>("CurrencyCode")
                                .HasColumnType("int");

                            b1.HasKey("TransactionId");

                            b1.ToTable("Transactions");

                            b1.WithOwner()
                                .HasForeignKey("TransactionId");
                        });

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Budget", b =>
                {
                    b.Navigation("BudgetCategories");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory", b =>
                {
                    b.Navigation("BudgetedAmounts");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Transaction", b =>
                {
                    b.Navigation("SubTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
